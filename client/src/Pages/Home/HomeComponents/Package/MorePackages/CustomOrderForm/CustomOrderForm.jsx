import { FaArrowAltCircleRight } from "react-icons/fa";
import Container from "../../../../../../Componnents/Shared/Container/Container";
import { useState } from "react";
import toast from "react-hot-toast";
import Load from "../../../../../../Componnents/Shared/Loader/load/Load";
import { misty, waters } from "./FormData/formData";
import { peopleOptions } from "./FormData/formData";
import { nimky } from "./FormData/formData";
import { jilabi } from "./FormData/formData";
import { doi } from "./FormData/formData";
import { chomoca } from "./FormData/formData";
import { singkara } from "./FormData/formData";
import CustomerOrderFacilites from "./CustomerOrderFacilities/CustomerOrderFacilites";
import FormHeading from "./FormHeading/FormHeading";
import { useQuery } from "@tanstack/react-query";
import { createCustomWithOutPackageOrder, createCustomWithPackageOrder, getCustomPerKgProductPrice, getCustomPerPichProductPrice } from "../../../../../../Api/customOrderRelatedApi/customApi";
import Loader from "../../../../../../Componnents/Shared/Loader/Loader";
import { Helmet } from "react-helmet";
const CustomOrderForm = () => {
    const [isCalculation,setIsCalculation] = useState(false)
    const [load,setLoad] = useState(false);
    const [packageRequired, setPackageRequired] = useState(true);
    const [totalPackagePrice,setTotalPackagePrice] = useState(0);
    const [showFacilities,setShowFacilites] = useState(false);

    // multiple state start
    const [p_howMuchPackage, setHowMuchPackage] = useState(0);
    const [p_customerFullName, setCustomerFullName] = useState();
    const [p_customerPhone, setCustomerPhone] = useState();
    const [p_pocketCondition, setPocketCondition] = useState();
    const [p_typeOfPackage, setTypeOfPackage] = useState();
    const [p_religion, setReligion] = useState();
    const [p_chomoca, setChomoca] = useState(false);
    const [p_singkara, setSingkara] = useState(false);
    const [p_jilabi, setJilabi] = useState(false);
    const [p_nimky, setNimky] = useState(false);
    const [p_misty, setMisty] = useState(false);
    const [p_doi, setDoi] = useState();
    const [p_water, setWater] = useState();
    const [p_Date,setDate] = useState()
    const {data:customPerKgProductPrice,isLoading} = useQuery({
      queryKey:["customPerKgProductPrice"],
      queryFn: async () => await getCustomPerKgProductPrice()
    })
    // todo: i will update custom dynamic price to let veriables
    
    // multiple state end

     // Handle Package Change
  const handlePackageChange = (e) => {
    const value = e.target.value === 'true';
    setPackageRequired(value);
  };

      // for with package handler submit function
      
      const handleIsPackageOrder = async(e) => {
        e.preventDefault();
        if(isCalculation){
        const form = e.target;
        const status = "With Package";
        const howMuchPackage = form.howMuchPackage.value;
        const typeOfPackage = form.typeOfPackage.value;
        const religion = form.religion.value;
        const water = form.water.value;
        const doi = form.doi.value;
        const chomoca = form.chomoca.checked;
        const singkara = form.singkara.checked;
        const jilabi = form.jilabi.checked;
        const nimky = form.nimky.checked;
        const misty = form.misty.checked;
        const pocketCondition = form.pocketCondition.value;
        const totalWithPackagePrice = totalPackagePrice;
        const customerFullName = form.fullName.value;
        const customerAddress = form.address.value;
        const customerPhone = form.phone.value;
        const customerEmail = form.email.value;
        const customerDescription = form.description.value;
        const eventDate = new Date(form.date.value);
    
        // ‚úÖ Check if the selected date is less than or equal to 2 days from today
        const today = new Date();
        const diffTime = eventDate.getTime() - today.getTime();
        const diffDays = diffTime / (1000 * 60 * 60 * 24);
    
        if (diffDays <= 2) {
          toast.error("‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶ï‡¶Æ‡¶™‡¶ï‡ßç‡¶∑‡ßá ‡ß® ‡¶¶‡¶ø‡¶® ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡ßá ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ üòä ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡¶∞‡ßç‡¶§‡ßá ‡¶Ö‡¶®‡¶ø‡¶ï ‡¶´‡ßÅ‡¶°ü•ß");
          return;
        }
        const customerOrderData = {status,howMuchPackage,typeOfPackage,religion,water,doi,chomoca,singkara,pocketCondition,jilabi,nimky,misty,totalWithPackagePrice,customerFullName,customerAddress,customerPhone,customerEmail,customerDescription,eventDate}
        // console.log("with package",customerOrderData); 
        setLoad(true)
        const result = await createCustomWithPackageOrder(customerOrderData);
        if(result?.insertedId){
          setLoad(false)
          toast.success('‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÅ‡¶∞‡ßç‡¶£ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶ï‡¶ø‡¶ö‡ßç‡¶õ‡ßÅ‡¶ï‡ßç‡¶∑‡¶£‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶Ö‡¶®‡¶ø‡¶ï ‡¶¨‡ßá‡¶ô‡ßç‡¶ó‡¶≤ ‡¶´‡ßÅ‡¶°‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶®‡¶ø‡¶¶‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶¨‡ßá‡•§',{duration:7000})
          setIsCalculation(false)
          form.reset();
        }
        else{toast.error('‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®')}
        
        }  
        else{toast.error("‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶ó‡ßá ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ üòä")}
      }
      // for without package handle function submit function
      const handleWithOutPackageOrder = async(e) => {
        e.preventDefault();
        if(isCalculation) {
          const form = e.target;
          const status = "WithOut Package";
          const typeOfPackage = form.typeOfPackage.value;
          const religion = form.religion.value;
          const water = form.water.value;
          const chomoca = form.chomoca.value;
          const singkara = form.singkara.value;
          const jilabi = form.jilabi.value;
          const nimky = form.nimky.value;
          const misty = form.misty.value;
          const pocketCondition = form.pocketCondition.value;
          const totalCustomPackagePrice = totalPackagePrice;
          const customerFullName = form.fullName.value;
          const customerAddress = form.address.value;
          const customerPhone = form.phone.value;
          const customerEmail = form.email.value;
          const customerDescription = form.description.value;
          const eventDate = new Date(form.date.value);
    
          // ‚úÖ Check if the selected date is less than or equal to 2 days from today
          const today = new Date();
          const diffTime = eventDate.getTime() - today.getTime();
          const diffDays = diffTime / (1000 * 60 * 60 * 24);
      
          if (diffDays <= 2) {
            toast.error("‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶ï‡¶Æ‡¶™‡¶ï‡ßç‡¶∑‡ßá ‡ß® ‡¶¶‡¶ø‡¶® ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡ßá ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ üòä ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡¶∞‡ßç‡¶§‡ßá ‡¶Ö‡¶®‡¶ø‡¶ï ‡¶´‡ßÅ‡¶°ü•ß");
            return;
          }
          const customerOrderData = {status,typeOfPackage,religion,water,chomoca,singkara,pocketCondition,jilabi,nimky,misty,totalCustomPackagePrice,totalPackagePrice,customerFullName,customerAddress,customerPhone,customerEmail,customerDescription,eventDate}
          setLoad(true)
        const result = await createCustomWithOutPackageOrder(customerOrderData);
        if(result?.insertedId){
          setLoad(false)
          toast.success('‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÅ‡¶∞‡ßç‡¶£ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§ ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶ï‡¶ø‡¶ö‡ßç‡¶õ‡ßÅ‡¶ï‡ßç‡¶∑‡¶£‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶Ö‡¶®‡¶ø‡¶ï ‡¶¨‡ßá‡¶ô‡ßç‡¶ó‡¶≤ ‡¶´‡ßÅ‡¶°‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶®‡¶ø‡¶¶‡¶ø ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶¨‡ßá‡•§',{duration:7000})
          form.reset();
          setIsCalculation(false)
        }
        else{toast.error('‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®')}
        }
        else{toast.error("‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶ó‡ßá ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ üòä")}
       
       
      }
       // get single items price
       const {data:singleItemPrice,isLoading:singlePriceLoad} = useQuery({
        queryKey:"singleItemPrice",
        queryFn:async () => await getCustomPerPichProductPrice()
       })

      // handle calculate total price with package
      const handleCalculateTotalPackagePrice = (e) => {
        e.preventDefault();
        setIsCalculation(true)
        // ‡¶Ø‡ßá‡¶ó‡ßÅ‡¶≤‡ßã ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá
        const isChomocaSelected = e.target.form.chomoca.checked;
        const isSingkaraSelected = e.target.form.singkara.checked;
        const isJilabiSelected = e.target.form.jilabi.checked;
        const isNimkySelected = e.target.form.nimky.checked;
        const isMistySelected = e.target.form.misty.checked;
    
        // ‡¶Ø‡ßá‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡ßÅ ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶π‡¶¨‡ßá
        const doiValue = e.target.form.doi.value;
        const waterValue = e.target.form.water.value;
        const dateValue = e.target.form.date.value;
        setDate(dateValue)
        // ‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø ‡¶´‡¶ø‡¶≤‡ßç‡¶° ‡¶•‡ßá‡¶ï‡ßá ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡ßÅ ‡¶®‡¶ø‡¶ö‡ßç‡¶õ‡¶ø
        const howMuchPackage = e.target.form.howMuchPackage.value;
        const customerFullName = e.target.form.fullName.value;
    
        setHowMuchPackage(howMuchPackage);
        setCustomerFullName(customerFullName);
        setCustomerPhone(e.target.form.phone.value);
        setPocketCondition(e.target.form.pocketCondition.value);
        setTypeOfPackage(e.target.form.typeOfPackage.value);
        setReligion(e.target.form.religion.value);
    
        // ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá ‡¶∏‡ßá‡¶ü‡¶æ ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶¨‡ßã
        setChomoca(isChomocaSelected);
        setSingkara(isSingkaraSelected);
        setJilabi(isJilabiSelected);
        setNimky(isNimkySelected);
        setMisty(isMistySelected);
        setDoi(doiValue);
        setWater(waterValue);
        // ‡¶è‡¶¨‡¶æ‡¶∞ ‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶¨‡¶æ ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶¶‡ßá‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶¨‡ßã
        let totalPackagePriceIs = 0;
    
        if (waterValue) {
            totalPackagePriceIs += howMuchPackage * singleItemPrice?.perPichWater;
        }
        if (isChomocaSelected) {
            totalPackagePriceIs += howMuchPackage * singleItemPrice?.perPichChomoca;
        }
        if (doiValue) {
            totalPackagePriceIs += howMuchPackage * singleItemPrice?.perPichDoi;
        }
        if (isSingkaraSelected) {
            totalPackagePriceIs += howMuchPackage * singleItemPrice?.perPichSingkara;
        }
        if (isJilabiSelected) {
            totalPackagePriceIs += howMuchPackage * singleItemPrice?.perPichJilabi;
        }
        if (isNimkySelected) {
            totalPackagePriceIs += howMuchPackage * singleItemPrice?.perPichNimky;
        }
        if (isMistySelected) {
            totalPackagePriceIs += howMuchPackage * singleItemPrice?.perPichMisty;
        }
    
        // ‡¶ü‡ßã‡¶ü‡¶æ‡¶≤ ‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶∏ ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶¨‡ßã
        setTotalPackagePrice(totalPackagePriceIs);
        setShowFacilites(true);
    
        toast.success(
            `‡¶Æ‡¶ø‡¶É ${customerFullName} ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶∞‡ßç‡¶¨‡¶Æ‡ßã‡¶ü ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶è‡¶∞ ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ = ${totalPackagePriceIs} ‡¶ü‡¶æ‡¶ï‡¶æ`,
            { duration: 7000 }
        );
    };
      
      // handle calculate total price without package
      const handleCalculateWithOutPackage = (e) => {
        e.preventDefault();
        setIsCalculation(true)
        // ‡¶Ü‡¶á‡¶ü‡ßá‡¶Æ‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶¶‡¶æ‡¶Æ ‡¶®‡¶ø‡¶∞‡ßç‡¶ß‡¶æ‡¶∞‡¶£ ‡¶ï‡¶∞‡¶õ‡¶ø
        let perPichWater = customPerKgProductPrice?.perPichWater || 0;
        let perPichChomoca = customPerKgProductPrice?.perPichChomoca || 0;
        let perPichSingkara = customPerKgProductPrice?.perPichSingkara || 0;
        let perKgJilabi = customPerKgProductPrice?.perKgJilabi || 0;
        let perKgNimky = customPerKgProductPrice?.perKgnimky || 0;
        let perKgMisty = customPerKgProductPrice?.perKgMisty || 0;
        let perKgDoi = customPerKgProductPrice?.perKgDoi || 0;
    
        // ‡¶´‡¶∞‡ßç‡¶Æ‡ßá‡¶∞ ‡¶°‡ßá‡¶ü‡¶æ ‡¶®‡¶ø‡¶ö‡ßç‡¶õ‡¶ø
        const form = e.target.form;
        
        const customerFullName = form.fullName.value || '';
        const misty = parseInt(form.misty.value) || 0;
        const nimky = parseInt(form.nimky.value) || 0;
        const jilabi = parseInt(form.jilabi.value) || 0;
        const chomoca = parseInt(form.chomoca.value) || 0;
        const singkara = parseInt(form.singkara.value) || 0;
        const water = parseInt(form.water.value) || 0;
        const doi = parseInt(form.doi.value) || 0;
        const dateValue = form.date.value;
        
        // ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡¶ï‡ßÅ‡¶≤‡ßá‡¶∂‡¶® ‡¶ï‡¶∞‡¶õ‡¶ø
        const totalMistyPrice = misty * perKgMisty;
        const totalNimkyPrice = nimky * perKgNimky;
        const totalJilabiPrice = jilabi * perKgJilabi;
        const totalChomocaPrice = chomoca * perPichChomoca;
        const totalSingkaraPrice = singkara * perPichSingkara;
        const totalWaterPrice = water * perPichWater;
        const totalDoiPrice = doi * perKgDoi
    
        // ‡¶Æ‡ßã‡¶ü ‡¶™‡ßç‡¶∞‡¶æ‡¶á‡¶∏ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶õ‡¶ø (‡¶Ø‡ßá ‡¶´‡¶ø‡¶≤‡ßç‡¶°‡¶ó‡ßÅ‡¶≤‡ßã ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡¶¨‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶∏‡ßá‡¶ó‡ßÅ‡¶≤‡ßã ‡¶Ø‡ßã‡¶ó ‡¶π‡¶¨‡ßá)
        const totalItemsPrices =
            totalMistyPrice +
            totalNimkyPrice +
            totalJilabiPrice +
            totalChomocaPrice +
            totalSingkaraPrice +
            totalDoiPrice+
            totalWaterPrice;
    
        // ‡¶∏‡ßç‡¶ü‡ßá‡¶ü ‡¶Ü‡¶™‡¶°‡ßá‡¶ü ‡¶ï‡¶∞‡¶õ‡¶ø
        setTotalPackagePrice(totalItemsPrices);
        setChomoca(chomoca);
        setSingkara(singkara);
        setJilabi(jilabi);
        setNimky(nimky);
        setMisty(misty);
        setWater(water);
        setDoi(doi)
        setDate(dateValue)
        setShowFacilites(true);
        // ‡¶ü‡ßã‡¶∏‡ßç‡¶ü ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ö‡ßç‡¶õ‡¶ø
        toast.success(
            `‡¶Æ‡¶ø‡¶É ${customerFullName} ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶∞‡ßç‡¶¨‡¶Æ‡ßã‡¶ü ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶è‡¶∞ ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ = ${totalItemsPrices} ‡¶ü‡¶æ‡¶ï‡¶æ`,
            { duration: 7000 }
        );
    };

      const handleTrustBengalFood = (e) => {
        if (e.target.checked) {
          toast.success(" ‡¶Ö‡¶®‡¶ø‡¶ï ‡¶¨‡ßá‡¶ô‡ßç‡¶ó‡¶≤ ‡¶´‡ßÅ‡¶° ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶∏‡¶Ç‡¶∞‡¶ï‡ßç‡¶∑‡¶£ ‡¶ï‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶¨‡ßá!", { duration: 4000 });
        }
      }
      if(isLoading || singlePriceLoad) return <Loader />
    return <>
    <Helmet>
        
        <meta name="description" content="Anik Confectionery offers custom Bengali food packages for various events. Order your personalized package now!" />
        <meta name="keywords" content="Bengali food, custom packages, Anik Confectionery, catering services" />
        <meta name="author" content="Anik Confectionery" />
        
        <title>‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ - Anik Confectionery</title>

        {/* Open Graph Meta Tags (for social media sharing) */}
        <meta property="og:title" content="‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ - Anik Confectionery" />
        <meta property="og:description" content="Order your custom Bengali food package for your special events from Anik Confectionery. A variety of delicious options await!" />
        <meta property="og:image" content="/path/to/social-image.jpg" />
        <meta property="og:url" content="https://yourwebsite.com/custom-package-order" />
        <meta property="og:type" content="website" />
      </Helmet>
         <div>
   <Container>
   <div className="my-14">
     <div className="flex flex-col items-center justify-center ">
       <div className="shadow-lg p-4 w-full md:w-[70%]">
         <div className=" space-y-4">
           
           {/* belling adress */}
           <div className="">
           
            {
                packageRequired ?
                 <>
                 <form onSubmit={handleIsPackageOrder}>
                <div className="my-8">
                <div className='space-y-3'>
                <FormHeading />
                <div className="divider"></div>
                <div className='md:flex items-center  gap-5'>
                <div className="w-full">
                <h3 className="mb-2 text-[15px] text-slate-700">‡¶∏‡¶∞‡ßç‡¶§ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
                <select onChange={handlePackageChange}
                    name="pocketCondition"
                    className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                    required>
                    <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                    <option value="true">‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶∏‡¶π ‡¶≤‡¶æ‡¶ó‡¶¨‡ßá</option>
                    <option value="false">‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶≤‡¶æ‡¶ó‡¶¨‡ßá ‡¶®‡¶æ‡•§‚ùå</option>
                </select>
                 </div>
    
                <div className='w-full'>
                  <h3 className="mb-2 text-[15px] text-slate-700">‡¶ß‡¶∞‡ßç‡¶Æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® </h3>
                  <select
                    name="religion"
                    className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                    required>
                    <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                    <option value="islam">‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ</option>
                    <option value="hindus">‡¶∏‡¶®‡¶æ‡¶§‡¶®</option>
                </select>
                </div>
                </div>
                <div className='md:flex items-center  gap-5'>
                <div className="w-full">
                <h3 className="mb-2 text-[15px] text-slate-700">‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶ü‡¶æ‡¶®‡ßá‡¶∞ ‡¶ß‡¶∞‡¶® ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
                <select
                    name="typeOfPackage"
                    className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                    required>
                    <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                    <option value="wedding">‡¶¨‡¶ø‡¶¨‡¶æ‡¶π</option>
                    <option value="birthday">‡¶ú‡¶®‡ßç‡¶Æ‡¶¶‡¶ø‡¶®</option>
                    <option value="importendDay">‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶¶‡¶ø‡¶®</option>
                    <option value="othersDay">‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø</option>
                </select>
                 </div>
    
                <div className='w-full'>
                  <h3 className="mb-2 text-[15px] text-slate-700">‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ </h3>
                  <select
                    name="howMuchPackage"
                    className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                    required>
                    <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                    {
                        peopleOptions?.map(option => <option key={option?.id} value={option?.value}>{option?.text}</option>)
                    }
                </select>
                </div>
                </div>
                {/* check box start */}
          
                <div className="grid grid-cols-3 md:grid-cols-5 gap-2 py-5">
                <fieldset className="fieldset p-2 border border-base-300 rounded-box">
                <legend className="fieldset-legend text-sm">‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞</legend>
                    <div className="flex items-center gap-2">
                    <input name="misty" type="checkbox" className="toggle toggle-sm" />
                    <label className=" text-sm">‡¶Æ‡¶ø‡¶∑‡ßç‡¶ü‡¶ø</label>
                    </div>
                </fieldset>
    
                <fieldset className="fieldset p-2 border border-base-300 rounded-box">
                <legend className="fieldset-legend text-sm">‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞</legend>
                    <div className="flex items-center gap-2">
                    <input name="nimky" type="checkbox" className="toggle toggle-sm" />
                    <label className=" text-sm">‡¶®‡¶ø‡¶Æ‡¶ï‡¶ø</label>
                    </div>
                </fieldset>
    
                <fieldset className="fieldset p-2 border border-base-300 rounded-box">
                <legend className="fieldset-legend text-sm">‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞</legend>
                    <div className="flex items-center gap-2">
                    <input name="jilabi" type="checkbox" className="toggle toggle-sm" />
                    <label className=" text-sm">‡¶ú‡¶ø‡¶≤‡¶æ‡¶™‡ßÄ</label>
                    </div>
                </fieldset>
    
                <fieldset className="fieldset p-2 border border-base-300 rounded-box">
                <legend className="fieldset-legend text-sm">‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞</legend>
                    <div className="flex items-center gap-2">
                    <input name="singkara" type="checkbox" className="toggle toggle-sm" />
                    <label className=" text-sm">‡¶∏‡¶ø‡¶Ç‡¶ï‡¶æ‡¶∞‡¶æ</label>
                    </div>
                </fieldset>
    
                <fieldset className="fieldset p-2 border border-base-300 rounded-box">
                <legend className="fieldset-legend text-sm">‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞</legend>
                    <div className="flex items-center gap-2">
                    <input name="chomoca" type="checkbox" className="toggle toggle-sm" />
                    <label className=" text-sm">‡¶ö‡¶Æ‡¶ö‡¶æ</label>
                    </div>
                </fieldset>
                </div>
    
                {/* check box end */}
    
                {/* water and drink start */}
    
                <div className='md:flex items-center  gap-5'>
                <div className="w-full">
                <h3 className="mb-2 text-[15px] text-slate-700">‡¶ß‡¶á ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
                <select
                    name="doi"
                    className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                    >
                    <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                    <option value="doi">‡¶ï‡¶æ‡¶™ ‡¶¶‡¶á</option>
                    
                </select>
                 </div>
    
                <div className='w-full'>
                  <h3 className="mb-2 text-[15px] text-slate-700">‡¶™‡¶æ‡¶®‡¶ø‡¶ì ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
                  <select
                    name="water"
                    className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                    >
                    <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                    <option value={true}>‡ß´‡ß¶‡ß¶ ‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ</option>
                </select>
                </div>
                </div>
    
                {/* water and drink end */}
                <div className='md:flex items-center  gap-5'>
                <div className='w-full mb-2'>
                  <h3 className="mb-2 text-[15px] text-slate-700">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶æ‡¶Æ ‡¶¶‡¶ø‡¶®</h3>
                <input name="fullName" className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm" type="text" placeholder=' ‡¶∏‡¶Æ‡ßç‡¶™‡ßÅ‡¶∞‡ßç‡¶£ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®---' required/>
                </div>
    
                <div className='w-full'>
                  <h3 className="mb-2 text-[15px] text-slate-700">‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶¶‡¶ø‡¶®</h3>
                <input name="address" className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm" type="text" placeholder='‡¶Ø‡ßá‡¶Æ‡¶® ‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¶‡¶ø‡¶®---' required/>
                </div>
                </div>
                <div className='md:flex items-center  gap-5'>
                <div className='w-full mb-2'>
                  <h3 className="mb-2 text-[15px] text-slate-700">‡¶∏‡¶ö‡¶≤ ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶¶‡¶ø‡¶®</h3>
                <input name="phone" className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm" type="number" placeholder='+‡ßÆ‡ßÆ..' required/>
                </div>
    
                <div className='w-full'>
                  <h3 className="mb-2 text-[15px] text-slate-700">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶á-‡¶Æ‡ßá‡¶á‡¶® ‡¶¶‡¶ø‡¶®</h3>
                <input name="email" className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm" type="email" required/>
                </div>
                </div>
               <div className="md:flex items-center  gap-5">
               <div className="w-full">
                  <h3 className="mb-2 text-[15px] text-slate-700">‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶∏‡¶æ/‡¶ò‡¶∞/‡¶∞‡¶æ‡¶∏‡ßç‡¶§‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶¶‡¶ø‡¶®</h3>
                  <p className="text-xs">‡¶∏‡¶†‡¶ø‡¶ï ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡¶ø‡ßü‡ßá ‡¶∏‡¶π‡¶Ø‡ßã‡¶ó‡¶ø‡¶§‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ‡¶Ø‡¶æ‡¶§‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶á ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶ø‡¶ï‡¶ü ‡¶∏‡¶π‡¶ú‡ßá ‡¶ö‡¶≤‡ßá ‡¶Ü‡¶∏‡ßç‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§</p>
                <textarea name="description" className="border-slate-300 border w-full focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] text-sm mt-2" type="text" placeholder='‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶∞‡¶ø‡¶∏‡¶ø‡¶≠ ‡¶ï‡¶∞‡¶¨‡ßá‡¶® ‡¶∏‡ßá‡¶á ‡¶ú‡¶æ‡ßü‡¶ó‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡¶ø‡¶®---'/>
                </div>
                <div className="w-full">
                <h3 className="mb-2 text-[15px] text-slate-700"> ‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶ü‡¶æ‡¶®‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
                  <input name="date" type="date" className="border-slate-300 border w-full focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] text-sm mt-2" required/>
                </div>
               </div>
                <div className="flex items-center gap-4">
                <div onClick={handleCalculateTotalPackagePrice} className="w-full p-2 text-neutral text-center bg-primary rounded font-medium">
                <button>‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡ßÅ‡¶®</button>
                </div>
                <div className="w-full p-2 text-neutral text-center bg-primary rounded font-medium">
                <button>{load === true ? <Load />:"‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®"}</button>
                </div>                
                </div>
                
                {/* after calculate then show this content for batter user ex: */}
                {
                  showFacilities && <div className="space-y-3">
                    
                  <div className="flex items-center gap-2"><FaArrowAltCircleRight />
                   <p>‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ <span className="underline">{p_customerFullName}</span></p>  
                  </div>
                  <div className="flex items-center gap-2"><FaArrowAltCircleRight />
                   <p>‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤‡¶É <span className="underline">{p_customerPhone}</span></p>  
                  </div>
                  <div className="flex items-center gap-2"><FaArrowAltCircleRight />
                  {
                    p_pocketCondition == "true" ? <> <p>‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶ï‡¶∞‡¶æ ‡¶•‡¶æ‡¶ï‡¶¨‡ßá</p></>:<> <p>‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶ï‡¶∞‡¶æ ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶®‡¶æ</p></>
                  }
                    
                  </div>
                  <div className="flex items-center gap-2"><FaArrowAltCircleRight />
                   <p>‡¶Ü‡¶™‡¶®‡¶ø <span className="underline">{p_religion === "islam" ? "‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ":"‡¶∏‡¶®‡¶æ‡¶§‡¶®"}</span> ‡¶ß‡¶∞‡ßç‡¶Æ‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑</p>  
                  </div>
                  <div className="flex items-center gap-2">
                  <FaArrowAltCircleRight />
                  <p>
                    ‡¶Ü‡¶™‡¶®‡¶ø{" "}
                    <span className="underline">{p_typeOfPackage === "wedding" && "‡¶¨‡¶ø‡¶¨‡¶æ‡¶π "}
                    {p_typeOfPackage === "birthday" && "‡¶ú‡¶®‡ßç‡¶Æ‡¶¶‡¶ø‡¶® "}
                    {p_typeOfPackage === "importendDay" && "‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶¶‡¶ø‡¶® "}
                    {p_typeOfPackage === "othersDay" && "‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø "}</span>
                    ‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶ü‡¶æ‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶ï‡ßç‡¶∞‡ßü ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶ö‡ßç‡¶õ‡ßá‡¶®‡•§
                  </p>
                </div>
                  <div className="flex items-center gap-2"><FaArrowAltCircleRight />
                   <p>‡¶Ü‡¶™‡¶®‡¶ø <span className="text-primary font-semibold text-lg underline">{p_howMuchPackage}</span> ‡¶ú‡¶® ‡¶Æ‡ßá‡¶π‡¶Æ‡¶æ‡¶®‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶∏‡ßá‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®‡•§</p>  
                  </div>
                  <div className="flex items-center gap-2">
                  <FaArrowAltCircleRight />
                  <p>
                    ‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï ‡¶™‡¶ï‡ßá‡¶ü‡ßá‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá 
                    <span className="underline">{p_misty && " ‡¶Æ‡¶ø‡¶∑‡ßç‡¶ü‡¶ø "}
                    {p_nimky && ` ${p_misty ? "‡¶ì " : ""}‡¶®‡¶ø‡¶Æ‡¶ï‡¶ø `}
                    {p_jilabi && ` ${p_misty || p_nimky ? "‡¶ì " : ""}‡¶ú‡¶ø‡¶≤‡¶æ‡¶™‡ßÄ `}
                    {p_chomoca && ` ${p_misty || p_nimky || p_jilabi ? "‡¶ì " : ""}‡¶ö‡¶Æ‡¶ö‡¶æ `}
                    {p_singkara && ` ${p_misty || p_nimky || p_jilabi || p_chomoca ? "‡¶ì " : ""}‡¶∏‡¶ø‡¶Ç‡¶ï‡¶æ‡¶∞‡¶æ `}  </span>
                    ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡¶≤‡¶õ‡ßá‡¶®‡•§
                  </p>
                </div>
                <div className="flex items-center gap-2">
                <FaArrowAltCircleRight />
                <p>
                  ‡¶ß‡¶á ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨‡ßá ‡¶Ü‡¶™‡¶®‡¶ø {p_doi === "doi" && "‡¶ï‡¶æ‡¶™ ‡¶ß‡¶á"} ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®‡•§
                </p>
              </div>
              <div className="flex items-center gap-2">
              <FaArrowAltCircleRight />
              <p>
                ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶™‡¶æ‡¶®‡¶ø ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨‡ßá ‡¶Ü‡¶™‡¶®‡¶ø{" "}
                <span className="underline">
                  {p_water === "true" && "‡¶Ü‡¶ß‡¶æ ‡¶≤‡¶ø‡¶ü‡¶æ‡¶∞ "}
                
               </span> 
                ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®‡•§
              </p>
            </div>
              <div className="flex items-center gap-2">
              <FaArrowAltCircleRight />
              <p>
                ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶ü‡¶æ‡¶®‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ <span className="underline font-semibold"> {  p_Date } </span> 
                ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®‡•§
              </p>
            </div>
              <div className="flex items-center gap-2">
              <FaArrowAltCircleRight />
              <p>
               ‡¶Ü‡¶Æ‡¶∞‡¶æ  <span className="underline font-semibold"> {  p_Date } </span> 
                ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§ ‡¶∞‡¶æ‡¶ñ‡¶¨‡ßã‡•§
              </p>
            </div>
  
                  <div className="mt-8">
                      <div className="flex items-center gap-3">
                      <input onClick={(e)=>handleTrustBengalFood(e)}  type="checkbox"  className="checkbox-sm checkbox-secondary" />
                      <label>‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶á ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶è‡¶á ‡¶°‡¶æ‡¶ü‡¶æ ‡¶∏‡ßá‡¶á‡¶≠ ‡¶ï‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶¨‡•§ ‡¶Ø‡¶¶‡¶ø ‡¶≠‡ßÇ‡¶≤ ‡¶®‡¶æ ‡¶π‡ßü ‡¶§‡¶æ‡¶π‡¶≤‡ßá ‡¶†‡¶ø‡¶ï ‡¶ö‡¶ø‡¶π‡ßç‡¶®‡¶§‡ßá ‡¶ö‡¶æ‡¶™ ‡¶¶‡¶ø‡¶®‡•§ ‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶</label>
                      </div>
                  </div>
                  <div className="divider"></div>
                  <div className="text-primary text-lg font-semibold">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶∞‡ßç‡¶¨‡¶Æ‡ßã‡¶ü ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ = {totalPackagePrice} ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞‡•§</div>
                  <div className="divider"></div>
                  </div>
                }
                </div>
                </div> 
                </form>
                </>

                :

                <> 
                <form onSubmit={handleWithOutPackageOrder}>
                <div className="my-8">
            <div className='space-y-3'>
            <FormHeading />
            <div className="divider"></div>
            <div className='md:flex items-center  gap-5'>
            <div className="w-full">
            <h3 className="mb-2 text-[15px] text-slate-700">‡¶∏‡¶∞‡ßç‡¶§ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
            <select onChange={handlePackageChange}
                name="pocketCondition"
                className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                required>
                <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                <option value="true">‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶∏‡¶π ‡¶≤‡¶æ‡¶ó‡¶¨‡ßá</option>
                <option value="false">‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßç‡¶Ø‡¶æ‡¶ï‡ßá‡¶ú ‡¶≤‡¶æ‡¶ó‡¶¨‡ßá ‡¶®‡¶æ‡•§‚ùå</option>
            </select>
             </div>

            <div className='w-full'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶ß‡¶∞‡ßç‡¶Æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® </h3>
              <select
                name="religion"
                className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                required>
                <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                <option value="‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ">‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ</option>
                <option value="‡¶∏‡¶®‡¶æ‡¶§‡¶®">‡¶∏‡¶®‡¶æ‡¶§‡¶®</option>
            </select>
            </div>
            </div>
            <div className='md:flex items-center  gap-5'>
            <div className="w-full">
            <h3 className="mb-2 text-[15px] text-slate-700">‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶ü‡¶æ‡¶®‡ßá‡¶∞ ‡¶ß‡¶∞‡¶® ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
            <select
                name="typeOfPackage"
                className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                required>
                <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                <option value="‡¶¨‡¶ø‡¶¨‡¶æ‡¶π">‡¶¨‡¶ø‡¶¨‡¶æ‡¶π</option>
                <option value="‡¶ú‡¶®‡ßç‡¶Æ‡¶¶‡¶ø‡¶®">‡¶ú‡¶®‡ßç‡¶Æ‡¶¶‡¶ø‡¶®</option>
                <option value="‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶¶‡¶ø‡¶®">‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶¶‡¶ø‡¶®</option>
                <option value="‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø">‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø</option>
            </select>
             </div>

            <div className='w-full'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶Æ‡¶ø‡¶∑‡ßç‡¶ü‡¶ø </h3>
              <select
                name="misty"
                className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                >
                <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                {
                    misty.map(option => <option key={option?.id} value={option?.value}>{option?.text}</option>)
                }
            </select>
            </div>
            </div>


                {/* ‡¶®‡¶ø‡¶Æ‡¶ï‡¶ø ‡¶ú‡¶ø‡¶≤‡¶æ‡¶™‡ßÄ */}
            <div className='md:flex items-center  gap-5'>
            <div className="w-full">
            <h3 className="mb-2 text-[15px] text-slate-700">‡¶®‡¶ø‡¶Æ‡¶ï‡¶ø ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
            <select
                name="nimky"
                className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                >
                <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                {
                    nimky?.map(option => <option value={option?.value} key={option?.id}>{option?.text}</option>)
                }
                
            </select>
             </div>

            <div className='w-full'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶ú‡¶ø‡¶≤‡¶æ‡¶™‡ßÄ </h3>
              <select
                name="jilabi"
                className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                >
                <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                {
                    jilabi?.map(option => <option key={option?.id} value={option?.value}>{option?.text}</option>)
                }
            </select>
            </div>
            </div>
            

            {/* ‡¶ß‡¶á ‡¶ö‡¶Æ‡¶ö‡¶æ */}
            <div className='md:flex items-center  gap-5'>
            <div className="w-full">
            <h3 className="mb-2 text-[15px] text-slate-700">‡¶ß‡¶á ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
            <select
                name="doi"
                className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                >
                <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
               {
                doi?.map(option => <option key={option?.id} value={option?.value}>{option?.text}</option>)
               }
                
            </select>
             </div>

            <div className='w-full'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶ö‡¶Æ‡¶ö‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
              <select
                name="chomoca"
                className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                >
                <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                {
                    chomoca?.map(option => <option key={option?.id} value={option?.value}>{option?.text}</option>)
                }
            </select>
            </div>
          
            </div>
            {/* water and singkara start */}

            <div className='md:flex items-center  gap-5'>
            <div className='w-full'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶∏‡¶ø‡¶Ç‡¶ï‡¶æ‡¶∞‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
              <select
                name="singkara"
                className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                >
                <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                {
                    singkara?.map(option => <option key={option?.id} value={option?.value}>{option?.text}</option>)
                }
            </select>
            </div>

            <div className='w-full'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶™‡¶æ‡¶®‡¶ø‡¶ì ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
              <select
                name="water"
                className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                >
                <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                {
                  waters.map(option => <option key={option?.id} value={option?.value}>{option?.text}</option>)
                }
            </select>
            </div>
            </div>

            {/* water and drink end */}
            <div className='md:flex items-center  gap-5'>
            <div className='w-full mb-2'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶æ‡¶Æ ‡¶¶‡¶ø‡¶®</h3>
            <input name="fullName" className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm" type="text" placeholder=' ‡¶∏‡¶Æ‡ßç‡¶™‡ßÅ‡¶∞‡ßç‡¶£ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®---' required/>
            </div>

            <div className='w-full'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶¶‡¶ø‡¶®</h3>
            <input name="address" className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm" type="text" placeholder='‡¶Ø‡ßá‡¶Æ‡¶® ‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¶‡¶ø‡¶®---' required/>
            </div>
            </div>
            <div className='md:flex items-center  gap-5'>
            <div className='w-full mb-2'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶∏‡¶ö‡¶≤ ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶¶‡¶ø‡¶®</h3>
            <input name="phone" className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm" type="number" placeholder='+‡ßÆ‡ßÆ..' required/>
            </div>

            <div className='w-full'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶á-‡¶Æ‡ßá‡¶á‡¶® ‡¶¶‡¶ø‡¶®</h3>
            <input name="email" className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm" type="email" required/>
            </div>
            </div>
            <div className="md:flex items-center  gap-5">
               <div className="w-full">
                  <h3 className="mb-2 text-[15px] text-slate-700">‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶∏‡¶æ/‡¶ò‡¶∞/‡¶∞‡¶æ‡¶∏‡ßç‡¶§‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶¶‡¶ø‡¶®</h3>
                  <p className="text-xs">‡¶∏‡¶†‡¶ø‡¶ï ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡¶ø‡ßü‡ßá ‡¶∏‡¶π‡¶Ø‡ßã‡¶ó‡¶ø‡¶§‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ‡¶Ø‡¶æ‡¶§‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶á ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶ø‡¶ï‡¶ü ‡¶∏‡¶π‡¶ú‡ßá ‡¶ö‡¶≤‡ßá ‡¶Ü‡¶∏‡ßç‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§</p>
                <textarea name="description" className="border-slate-300 border w-full focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] text-sm mt-2" type="text" placeholder='‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶∞‡¶ø‡¶∏‡¶ø‡¶≠ ‡¶ï‡¶∞‡¶¨‡ßá‡¶® ‡¶∏‡ßá‡¶á ‡¶ú‡¶æ‡ßü‡¶ó‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡¶ø‡¶®---'/>
                </div>
                <div className="w-full">
                <h3 className="mb-2 text-[15px] text-slate-700"> ‡¶Ö‡¶®‡ßÅ‡¶∑‡ßç‡¶ü‡¶æ‡¶®‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶∏‡¶ø‡¶≤‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
                  <input name="date" type="date" className="border-slate-300 border w-full focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] text-sm mt-2" required/>
                </div>
               </div>
            <div className="flex items-center gap-4">
            <div onClick={handleCalculateWithOutPackage} className="w-full p-2 text-neutral text-center bg-primary rounded font-medium">
            <button>‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡ßÅ‡¶®</button>
            </div>
            <div className="w-full p-2 text-neutral text-center bg-primary rounded font-medium">
            <button>‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®</button>
            </div>
            </div>
            </div>
                </div> 
                </form>  
                <div>
                  <ul>
                   {
                    showFacilities && <>
                    <div className={`flex items-center gap-3`}><FaArrowAltCircleRight /><p>{p_misty} ‡¶ï‡ßá‡¶ú‡¶ø ‡¶Æ‡¶ø‡¶∑‡ßç‡¶ü‡¶ø</p></div>
                   <div className={`flex items-center gap-3`}><FaArrowAltCircleRight /><p>{p_nimky} ‡¶ï‡ßá‡¶ú‡¶ø ‡¶®‡¶ø‡¶Æ‡¶ï‡¶ø</p></div>
                   <div className={`flex items-center gap-3`}><FaArrowAltCircleRight /><p>{p_jilabi} ‡¶ï‡ßá‡¶ú‡¶ø ‡¶ú‡¶ø‡¶≤‡¶æ‡¶™‡ßÄ</p></div>
                   <div className={`flex items-center gap-3`}><FaArrowAltCircleRight /><p>{p_doi} ‡¶ï‡ßá‡¶ú‡¶ø ‡¶ß‡¶á</p></div>
                   <div className={`flex items-center gap-3`}><FaArrowAltCircleRight /><p>{p_singkara} ‡¶ü‡¶ø ‡¶∏‡¶ø‡¶Ç‡¶ï‡¶æ‡¶∞‡¶æ</p></div>
                   <div className={`flex items-center gap-3`}><FaArrowAltCircleRight /><p>{p_chomoca} ‡¶ü‡¶ø ‡¶ö‡¶Æ‡¶ö‡¶æ</p></div>
                   <div className={`flex items-center gap-3`}><FaArrowAltCircleRight /><p>{p_water} ‡¶≤‡¶ø‡¶ü‡¶æ‡¶∞ ‡¶™‡¶æ‡¶®‡¶ø</p></div>
                   <div className={`flex items-center gap-3`}><FaArrowAltCircleRight /><p>{p_Date} ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶•‡¶æ‡¶ï‡¶¨‡ßá</p></div>
                  <div className="divider"></div>
                  <div className="text-primary text-lg font-semibold">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶∞‡ßç‡¶¨‡¶Æ‡ßã‡¶ü ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ = {totalPackagePrice} ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞‡•§</div>
                   </>
                   }
                  </ul>
                </div>
                </> 
            }
           
    
           </div>
          <CustomerOrderFacilites />
         </div>
       </div>
     </div>
   </div>
   <div>
   </div>
 </Container>
</div>
    </>
}
export default CustomOrderForm;