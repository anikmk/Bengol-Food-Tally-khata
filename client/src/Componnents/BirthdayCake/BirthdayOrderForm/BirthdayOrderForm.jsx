import emailjs from '@emailjs/browser';
import { FaMinus, FaPlus } from "react-icons/fa";
import { IoHeartOutline, IoReload } from "react-icons/io5";
import { MdDownloadDone } from "react-icons/md";
import { MdOutlineDeliveryDining } from "react-icons/md";
import { CiDiscount1 } from "react-icons/ci";
import { SiFoodpanda } from "react-icons/si";
import { useState } from "react";
import { useLocation } from "react-router-dom";
import toast from "react-hot-toast"
import useAuth from '../../../hooks/useAuth';
import Loader from '../../Shared/Loader/Loader';
import Container from '../../Shared/Container/Container';
import Load from '../../Shared/Loader/load/Load';
import { submitBirthdayCakeOrderInfo } from '../../../Api/BirthdayRelatedApi/birthday';

const BirthdayOrderForm = () => {
  const {user,loading} = useAuth();
  const [rajnagarCharge,setRajnagarCharge] = useState(0)
  const [karnigramCharge,setKarnigramCharge] = useState(0)
  const [kharparaCharge,setKharparaCharge] = useState(0)
  const [mojidpurCharge,setMojidpurCharge] = useState(0)
  const totalCharge = rajnagarCharge || karnigramCharge || kharparaCharge || mojidpurCharge;
 
  const [customerAddress, setCustomerAddress] = useState("");
  const [load,setLoad] = useState(false);
  const [quantity,setQuantity] = useState(1);
  const location = useLocation();
  const searchParams = new URLSearchParams(location.search);
  const birthdayCakeShapeName = searchParams.get("name");
  const birthdayCakePrice = searchParams.get("price");
  const birthdayCakeAvailability = searchParams.get("availability");
  const birthdayCakeImage = searchParams.get("image");
  const cakeSize = searchParams.get("size");
  const cakeFlavor = searchParams.get("flavor");
  
  if (loading) return <Loader />;

  let price = birthdayCakePrice;
  const handleIncreseFood = () => {
    setQuantity(quantity + 1)
  }
  const hanldeDecreseFood = () => {
    if(quantity === 1 ){
      return toast.error("quantity not down the zero")
    }
    setQuantity(quantity - 1)
  }
  let totalFoodPrice = price * quantity;

const handleConfirmOrder = () => {
  if(totalFoodPrice <= 100){
   return toast.error("‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§ ! ‡¶Æ‡¶ø‡¶®‡¶ø‡¶Æ‡¶æ‡¶Æ ‡ßß‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®")
  }
}
const handleAddressChange = (e) => {
  const selectedAddress = e.target.value;
  setCustomerAddress(selectedAddress);
    // Reset all charges first
  setRajnagarCharge(0);
  setKarnigramCharge(0);
  setKharparaCharge(0);
  setMojidpurCharge(0);
  switch (selectedAddress) {
    case "rajnagar":
        setRajnagarCharge(30);
      toast.success("‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú‡¶É ‡ß©‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ");
      break;
    case "kharpara":
    case "bajua":
        setKharparaCharge(40);
      toast.success("‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú‡¶É ‡ß™‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ");
      break;
    case "parshipara":
    case "karnigram":
        setKarnigramCharge(50);
      toast.success("‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú‡¶É ‡ß´‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ");
      break;
    case "mojidpur":
        setMojidpurCharge(60);
      toast.success("‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø ‡¶ö‡¶æ‡¶∞‡ßç‡¶ú‡¶É ‡ß¨‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ");
      break;
    default:
      break;
  }
};

const handleOrderSubmit = async(e) => {
  e.preventDefault();
  const form = e.target;
  const cakeShapeName = birthdayCakeShapeName;
  const totalCakePrice = price * quantity;
  const totalPriceWithCharge = totalCakePrice + totalCharge;
  const moneyCharge = totalCharge;
  const customerFullName = form.fullName.value;
  const customerAddress = form.address.value;
  const customerPhone = form.phone.value;
  const customerEmail = form.email.value;
  const customerDescription = form.description.value;
  const availability = birthdayCakeAvailability;
  const cakeImage = birthdayCakeImage;
  const birthdayDate = new Date(form.birthdayDate.value);
  const plainDate = birthdayDate.toISOString().split("T")[0];
  const birthdayHeading = form.birthdayHeading.value;

            const today = new Date();
            const diffTime = birthdayDate.getTime() - today.getTime();
            const diffDays = diffTime / (1000 * 60 * 60 * 24);
        
            if (diffDays <= 2) {
              toast.error("‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶ï‡¶Æ‡¶™‡¶ï‡ßç‡¶∑‡ßá ‡ß® ‡¶¶‡¶ø‡¶® ‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡ßá ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ üòä ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ‡¶∞‡ßç‡¶§‡ßá ‡¶Ö‡¶®‡¶ø‡¶ï ‡¶´‡ßÅ‡¶°ü•ß");
              return;
            }

  const customerOrderData = {cakeShapeName,cakeSize,cakeFlavor,quantity,totalCakePrice,customerFullName,customerAddress,customerPhone,customerEmail,customerDescription,availability,cakeImage,moneyCharge,totalPriceWithCharge,birthdayDate:plainDate,birthdayHeading}

  setLoad(true)
  try{
    const result = await submitBirthdayCakeOrderInfo(customerOrderData);
    if(result.insertedId){
      toast.success("‡¶Ö‡¶≠‡¶ø‡¶®‡¶®‡ßç‡¶¶‡¶® ! ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶£",{duration:4000});
      form.reset();
      // here handle email js:
      emailjs.send(
        import.meta.env.VITE_EMAILJS_SERVICE_ID,
        import.meta.env.VITE_EMAILJS_TEMPLATE_ID,
        {
          to_email: customerEmail,
          to_name: customerFullName,
          food_name: `${birthdayCakeShapeName} - ${cakeFlavor} - ${cakeSize}`,
          quantity: quantity,
          total_price: totalFoodPrice,
          total_charge: moneyCharge,
          total_money: totalPriceWithCharge,
          address: customerAddress,
          shop_name: "‡¶Ö‡¶®‡¶ø‡¶ï ‡¶ï‡¶®‡¶´‡ßá‡¶ï‡¶∂‡¶® (‡¶¨‡ßá‡¶ú‡ßç‡¶û‡¶≤ ‡¶´‡ßÅ‡¶°)",
          from_name: "‡¶™‡ßç‡¶∞‡ßã‡¶É ‡¶Ö‡¶∞‡ßç‡¶ú‡ßÅ‡¶®",
        },
        import.meta.env.VITE_EMAILJS_PUBLIC_KEY
      )
      .then(() => {
        toast.success('‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡¶®‡¶´‡¶æ‡¶∞‡ßç‡¶Æ‡ßá‡¶∂‡¶® ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡ßü‡ßá‡¶õ‡ßá!', {
            duration:8000,
          position: "bottom-center"
        })
      })
      .catch((error) => {
        console.error("‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá:", error);
        toast.success('‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•‡•§ ‡¶§‡¶¨‡ßá ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶´‡¶≤ ‡¶π‡ßü‡ßá‡¶õ‡ßá!', {
          position: "bottom-center"
        })
      });
    }
  }
  catch(err){
    console.log("‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÅ‡¶∞‡ßç‡¶£ ‡¶π‡ßü ‡¶®‡¶ø‡•§ ‡¶ï‡¶ø‡¶ö‡ßç‡¶õ‡ßÅ‡¶ï‡ßç‡¶∑‡¶® ‡¶™‡¶∞ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®");
  }
  finally{
    setLoad(false)
  }
}
    
   return  <div>
   <Container>
   <div className="my-14">
    
     <div className="flex flex-col items-center justify-center ">
       <div className="border p-4 shadow-xl w-full md:w-[40%]">
         <div className=" space-y-4">
           <h2 className="font-medium text-xl text-black">{birthdayCakeShapeName}</h2>
           <div className="flex items-center gap-5">
             <div>rating</div>
             <span>2.4 (3)</span>
           <div>SKU:25415</div>
           </div>
           <p className="text-black font-medium text-2xl ">{birthdayCakePrice} ‡¶ü‡¶æ‡¶ï‡¶æ</p>
           <div className="flex items-center justify-between md:gap-3">
               <div className="flex text-base items-center gap-9 py-3 px-4 font-semibold shadow-lg">
                   <div onClick={hanldeDecreseFood} className="cursor-pointer hover:text-primary"><FaMinus  /></div>
                   <div className="text-xl">{quantity}</div>
                   <div onClick={handleIncreseFood} className="cursor-pointer hover:text-primary"><FaPlus /></div>
               </div>
               <div className="px-[4px] py-3 text-xl hover:cursor-pointer hover:text-primary font-semibold shadow-lg">
                  ‡¶Æ‡ßã‡¶ü: {totalFoodPrice} ‡¶ü‡¶æ‡¶ï‡¶æ
               </div>
           </div>
           {/* belling adress */}
           <div className="">
           <form onSubmit={handleOrderSubmit}>
        <div className="my-8">
            <div className='space-y-3'>
            <div className="">
            <h3 className="text-center uppercase text-xl mb-3 text-primary font-medium">‚úî ‡¶ö‡¶æ‡¶π‡¶ø‡¶¶‡¶æ ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶á ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡¶ø‡¶® </h3>
            <p className="text-center md:text-sm text-xs"><span className="text-green-700">‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶®‡¶É</span> <span className="text-slate-700">‡¶∂‡ßÅ‡¶ß‡ßÅ‡¶Æ‡¶æ‡¶§‡ßç‡¶∞ ‡¶∞‡¶æ‡¶ú‡¶®‡¶ó‡¶∞, ‡¶ñ‡¶æ‡¶∞‡¶™‡¶æ‡¶°‡¶º‡¶æ, ‡¶¨‡¶æ‡¶ú‡ßÅ‡¶Ø‡¶º‡¶æ, ‡¶™‡¶æ‡¶∞‡¶∂‡¶ø‡¶™‡¶æ‡¶°‡¶º‡¶æ,  ‡¶ï‡¶£‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ, ‡¶Æ‡¶ú‡¶ø‡¶¶‡¶™‡ßÅ‡¶∞ ‡¶è‡¶á ‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ ‡¶ó‡ßÅ‡¶≤‡ßã‡¶§‡ßá ‡¶π‡ßã‡¶Æ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶ø‡¶∏ ‡¶ö‡¶≤‡¶ø‡¶§‡•§ </span></p>
            </div>
            <div className="divider"></div>
            <div className='md:flex items-center  gap-5'>
            <div className='w-full mb-2'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶ú‡¶®‡ßç‡¶Æ‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶™‡¶ø‡¶ï ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
            <input name="birthdayDate" className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm" type="date" required/>
            </div>

            <div className='w-full'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶ï‡ßá‡¶ï‡ßá‡¶∞ ‡¶â‡¶™‡¶∞ ‡¶ï‡¶ø ‡¶≤‡ßá‡¶ñ‡¶æ ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶ü‡¶æ‡¶á‡¶™ ‡¶ï‡¶∞‡ßÅ‡¶®</h3>
              <textarea className='border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm' name="birthdayHeading" placeholder='‡¶Ø‡ßá‡¶Æ‡¶®‡¶É ‡¶π‡ßç‡¶Ø‡¶æ‡¶™‡¶ø ‡¶¨‡¶æ‡¶∞‡ßç‡¶•‡¶°‡ßá ‡¶ü‡ßÅ ‡¶á‡¶â [ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ ] ‡¶¨‡¶æ ‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø...' required></textarea>
            </div>
            </div>



            <div className='md:flex items-center  gap-5'>
            <div className='w-full mb-2'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶®‡¶æ‡¶Æ ‡¶¶‡¶ø‡¶®</h3>
            <input name="fullName" className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm" type="text" placeholder=' ‡¶∏‡¶Æ‡ßç‡¶™‡ßÅ‡¶∞‡ßç‡¶£ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®---' required/>
            </div>

            <div className='w-full'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶¶‡¶ø‡¶®</h3>
            <select
                value={customerAddress}
                onChange={handleAddressChange}
                name="address"
                className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm"
                required>
                <option value="" disabled selected>‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
                <option value="rajnagar">‡¶∞‡¶æ‡¶ú‡¶®‡¶ó‡¶∞</option>
                <option value="kharpara">‡¶ñ‡¶æ‡¶∞‡¶™‡¶æ‡¶°‡¶º‡¶æ</option>
                <option value="parshipara">‡¶™‡¶æ‡¶∞‡¶∂‡¶ø‡¶™‡¶æ‡¶°‡¶º‡¶æ</option>
                <option value="bajua">‡¶¨‡¶æ‡¶ú‡ßÅ‡ßü‡¶æ</option>
                <option value="karnigram">‡¶ï‡¶£‡¶ø‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ</option>
                <option value="mojidpur">‡¶Æ‡¶ú‡¶ø‡¶¶‡¶™‡ßÅ‡¶∞</option>
            </select>
            </div>
            </div>
            <div className='md:flex items-center  gap-5'>
            <div className='w-full mb-2'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶∏‡¶ö‡¶≤ ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ ‡¶¶‡¶ø‡¶®</h3>
            <input name="phone" className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm" type="number" placeholder='+‡ßÆ‡ßÆ..' required/>
            </div>

            <div className='w-full'>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶á-‡¶Æ‡ßá‡¶á‡¶® ‡¶¶‡¶ø‡¶®</h3>
            <input name="email" className="border-slate-300 border focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[16px] w-full text-sm" type="email" defaultValue={user?.email}  required/>
            </div>
            </div>
            <div>
              <h3 className="mb-2 text-[15px] text-slate-700">‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶∏‡¶æ/‡¶ò‡¶∞/‡¶∞‡¶æ‡¶∏‡ßç‡¶§‡¶æ ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶¶‡¶ø‡¶®</h3>
              <p className="text-xs">‡¶∏‡¶†‡¶ø‡¶ï ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡¶ø‡ßü‡ßá ‡¶∏‡¶π‡¶Ø‡ßã‡¶ó‡¶ø‡¶§‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®‡•§ ‡¶Ø‡¶æ‡¶§‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ö‡¶®‡ßÅ‡¶Ø‡¶æ‡¶á ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶®‡¶ø‡¶ï‡¶ü ‡¶∏‡¶π‡¶ú‡ßá ‡¶ö‡¶≤‡ßá ‡¶Ü‡¶∏‡ßç‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§</p>
            <textarea name="description" className="border-slate-300 border w-full focus:outline-none bg-transparent px-4 py-2 rounded-lg text-[11px] text-sm mt-2" type="text" placeholder='‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶∞‡ßç‡¶•‡¶°‡ßá ‡¶ï‡ßá‡¶ï ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶∞‡¶ø‡¶∏‡¶ø‡¶≠ ‡¶ï‡¶∞‡¶¨‡ßá‡¶® ‡¶∏‡ßá‡¶á ‡¶ú‡¶æ‡ßü‡¶ó‡¶æ‡¶∞ ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶§‡¶•‡ßç‡¶Ø ‡¶¶‡¶ø‡¶®‡•§‡¶Ø‡ßá‡¶Æ‡¶®‡¶É ‡¶ñ‡¶æ‡¶Å‡¶® ‡¶≠‡¶æ‡ßú‡¶ø,‡¶Æ‡¶æ‡¶∏‡ßç‡¶ü‡¶æ‡¶∞ ‡¶≠‡¶æ‡ßú‡¶ø,‡¶∏‡ßà‡ßü‡¶¶ ‡¶≠‡¶æ‡ßú‡¶ø' required/>
            </div>
            <div onClick={handleConfirmOrder} className="w-full p-2 text-neutral text-center bg-primary rounded font-medium">
            <button>{load === true ? <Load />:"‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®"}</button>
            </div>
          </div>
        </div>         
    </form>
           </div>
           <div className="flex items-center gap-3 font-medium cursor-pointer hover:text-primary">
           <IoHeartOutline />
            ‡¶∏‡ßá‡¶á‡¶¨ ‡¶ï‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡ßÅ‡¶®
           </div>
           <div className="space-y-3">
           <div className="flex items-center gap-3">
            <MdDownloadDone />
            <span>‡¶∏‡ßá‡¶∞‡¶æ ‡¶Æ‡¶æ‡¶®‡ßá‡¶∞ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡¶Ø‡¶º‡¶§‡¶æ</span>
          </div>
          <div className="flex items-center gap-3">
            <MdOutlineDeliveryDining />
            <span>‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡¶Æ‡¶§‡ßã ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶¶‡ßç‡¶∞‡ßÅ‡¶§ ‡¶°‡ßá‡¶≤‡¶ø‡¶≠‡¶æ‡¶∞‡¶ø</span>
          </div>
          <div className="flex items-center gap-3">
            <CiDiscount1 />
            <span>‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶â‡ßé‡¶∏‡¶¨‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑ ‡¶°‡¶ø‡¶∏‡¶ï‡¶æ‡¶â‡¶®‡ßç‡¶ü</span>
          </div>
          <div className="flex items-center gap-3">
            <SiFoodpanda />
            <span>‡¶Æ‡¶ø‡¶®‡¶ø‡¶Æ‡¶æ‡¶Æ ‡ßß‡ß¶‡ß¶ ‡¶ü‡¶æ‡¶ï‡¶æ‡¶∞ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßÅ‡¶®</span>
          </div>
          <div className="flex items-center gap-3">
            <IoReload />
            <span>‡¶Ö‡¶∞‡ßç‡¶°‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞ ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶®‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡¶¨‡ßá ‡¶®‡¶æ</span>
          </div>

           </div>
           
         </div>
       </div>
     </div>
   </div>
   
   <div>
       
       {/* review */}
   </div>
 </Container>
</div>
}
export default BirthdayOrderForm;